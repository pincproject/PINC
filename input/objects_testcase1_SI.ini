;
; @file			input.ini
; @brief		PINC input file template.
; @author		Steffen Brask <steffen.brask@fys.uio.no>
;

[files]
objects = sphere.txt, sphere2.txt		; paths to objects
output = data/							; data file path (including filename prefix)

[msgfiles]
parsedump = parsedump.txt				; Info on how input was parsed
collision = CollisionDump.txt				; additional printout from collisions

[time]
nTimeSteps = 1000;60000 						; Number of time steps
timeStep = 6.73e-9;#1.68e-9 #3.36e-9							; Time step (in 1/omega_p of specie 0)

; Use comma-separated lists to specify several dimensions.
[grid]
nDims=3
nSubdomains=2,2,2						; Number of subdomains
nEmigrantsAlloc= 2 pc, 4 pc, 8 pc		; Number of particles to allocate for (corner, edge, face)
trueSize=32,32,32						; Number of (true) grid points per MPI node
stepSize=0.013; 0.0083#0.00207 #0.00414							; Cell size (in Debye lengths of specie 0)
nGhostLayers = 1						; Number of Ghost points [x_min, y_min,...,x_max,...]
thresholds=0.1							; Thresholds for particle migration
;boundaries = NEUMANN, NEUMANN, NEUMANN, NEUMANN, NEUMANN, NEUMANN
boundaries = DIRICHLET,DIRICHLET,DIRICHLET,DIRICHLET,DIRICHLET,DIRICHLET					; Boundary conditions at edges
;boundaries=PERIODIC

; Domain size computed as (nSubdomains*trueSize-1)*stepSize

[fields]
BExt=0,0,0								; Externally imposed B-field
EExt=0,0,0								; Externally imposed E-field

[population]
; Use comma-separated lists to specify several species.
; The first specie is used for normalizing
nSpecies = 2
nParticles = 128 pc
nAlloc = 256 pc							; Number of particles to allocate memory for
charge = -1.602e-19,1.602e-19
mass = 9.109e-31,9.109e-29;1.67e-27;
density = 1e9,1e9
drift = 0,0,0,0,0,0
perturbAmplitude = 1e-5,0,0,0,0,0
perturbMode = 1,0,0,0,0,0
thermalVelocity = 123113,12311;2875 ;
maxVel = 1

[methods]
; Which solvers/algorithms to use?!
mode = oCollMode
normalization = SI
poisson = mgSolver
acc = puAcc3D1KE
distr = puDistr3D1split
migrate = puExtractEmigrants3DOpen
mcc = mccCollissionsOff ;constCrossect	; turn off with "mccCollissionsOff" valid : constCrossect, constFreq


[multigrid]
; Specific parameters of each algorithm? E.g. depth of MG, BCs
cycle           = mgVRecursive     ; Choice of mg cycle type
preSmooth       = gaussSeidelRBND	   ; Choice of presmoother method (Only 1 possible option yet)
postSmooth      = gaussSeidelRBND	   ; Choice of postsmoother method
coarseSolver    = gaussSeidelRBND    ; Choice of coarse grid solver
mgLevels        = 4				   ; Number of Multigrid levels
mgCycles        = 5			   ; Number of cycles
nPreSmooth      = 10			   ; Number of iterations for the presmoother
nPostSmooth     = 10			   ; Number of iterations for the postsmoother
nCoarseSolve    = 10
prolongator     = bilinear		   ; Prolongation stencil
restrictor      = halfWeight	   ; Restrictor stencil
runNumber		= 0.0              ; Only for MG Run modes
tol 		= 1e-6			; Averge residual in MG sol
objTol		= 1e-8			; Average residual for capMatrix Sol (typ smaller than tol)


[object]
biasOn 		= 1			; turn biasing on (1) or off (0)
bias 		= -0.2 			; Array with bias values for each object (only one obj works for now)


[collisions]
; specific parameters used in collisional module
nSpeciesNeutral = 1
neutralMass = 9.109e-29
numberDensityNeutrals = 1e9;933 		; [m^-3 DebyeLength^3], number per cell ,is constant for now
thermalVelocityNeutrals = 12311;407	; one species.
neutralDrift = 0,0,0
artificialLoss = 1			;For electrons. Default is 1. (factor in energy change)
realElectronMass = 9.10938356e-31	;
; If using static collision frq
collFrqCex = 300000			; How often CEX collision occurs	
collFrqIonElastic = 700000		; How often Elastic Ion collision occurs
collFrqElectronElastic = 1800000	; How often Elastic Electron collision occurs

; If using functional form of crossections e.g mccGetPmax...() freq propto v
CEX_a = 	0.00241
CEX_b = 	57.06.0
ion_elastic_a = 0.00081
ion_elastic_b = 150.0
electron_a = 	0.001205
electron_b = 	1.2758
