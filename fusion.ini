;
; @file			fusion.ini
; @brief		PINC input file for plasma fusion.
; @author		Vigdis Holta <vigdis.holta@fys.uio.no>
;

[files]
;objects = sphere.txt, sphere2.txt		; paths to objects
output = data/							; data file path (including filename prefix)

[msgfiles]
parsedump = parsedump.txt				; Info on how input was parsed

[time]
nTimeSteps = 2   						; Number of time steps
timeStep = 0.2							; Time step (in 1/omega_p of specie 0)
startTime = 0.0             ; Start time, in case of continuing a simulation

; Use comma-separated lists to specify several dimensions.
[grid]
nDims=2
nSubdomains=1,1					; Number of subdomains
nEmigrantsAlloc=1 pc, 2 pc		; Number of particles to allocate for (corner, edge, face)
debye=0.52								  ; Debye length of specie 0 (in meters)
trueSize=32,32					; Number of (true) grid points per MPI node
stepSize=0.2    						; Cell size (in Debye lengths of specie 0)
nGhostLayers = 1						; Number of Ghost points [x_min, y_min,...,x_max,...]
thresholds=0.1							; Thresholds for particle migration
boundaries = PERIODIC				; Boundary conditions at edges


; Domain size computed as (nSubdomains*trueSize-1)*stepSize

[fields]
BExt=0,0,0								; Externally imposed B-field
EExt=0,0,0								; Externally imposed E-field

[population]
; Use comma-separated lists to specify several species.
; The first specie is used for normalizing
nSpecies = 2
nParticles = 64 pc
nAlloc = 96 pc							; Number of particles to allocate memory for
charge = -1,1
mass = 1,1836
multiplicity = auto

temperature = 0							; Temperature (in Kelvin)
drift = 0
perturbAmplitude = 0.0,0,0,0,0,0
perturbMode = 0,0,0,0,0,0

thermalVelocity = 0
maxVel = 1

[blob]
; Input parameters to add a plasma blob
blobAmp = 0.1      ; nBlobParticles/nParticles
nBlobParticles = 32 pc ; number of blob particles pr cell
blobSize = 1.0,1.0   ; size of the blob

[methods]
; TBD: which solvers/algorithms to use?!
mode = regular
poisson = mgSolver
acc =  puAccND1             ; Must use Boris for BExt
distr = puDistrND1
migrate = puExtractEmigrantsND

[multigrid]
; Specific parameters of each algorithm? E.g. depth of MG, BCs
cycle           = mgVRecursive             	; Choice of mg cycle type
preSmooth       = gaussSeidelRBND			; Choice of presmoother method (Only 1 possible option yet)
postSmooth      = gaussSeidelRBND    		; Choice of postsmoother method
coarseSolver    = gaussSeidelRBND 			; Choice of coarse grid solver
mgLevels        = 5							; Number of Multigrid levels
mgCycles        = 15						; Number of cycles
nPreSmooth      = 10						; Number of iterations for the presmoother
nPostSmooth     = 10						; Number of iterations for the postsmoother
nCoarseSolve    = 10
prolongator     = bilinear					; Prolongation stencil
restrictor      = halfWeight				; Restrictor stencil
