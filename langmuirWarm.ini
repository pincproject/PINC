;
; @file			input.ini
; @author		Sigvald Marholm <sigvaldm@fys.uio.no>
; @copyright	University of Oslo, Norway
; @brief		PINC input file template.
; @date			11.10.15
;

[files]
output = data/							; data file path (including filename prefix)

[objects]
objects = sphere.h5, sphere2.txt		; paths to objects

[msgfiles]
parsedump = parsedump.txt				; Info on how input was parsed

[time]
nTimeSteps = 1 						; Number of time steps
timeStep = 1.77e-8							; Time step (in 1/omega_p of specie 0)
startTime = 0.0                         ; Start time, in case of continuing a simulation

; Use comma-separated lists to specify several dimensions.
[grid]
nDims=3
nSubdomains=1,1,1						; Number of subdomains
nEmigrantsAlloc=1 pc, 2 pc, 4 pc		; Number of particles to allocate for (corner, edge, face)
;debye=0.52								; Debye length of specie 0 (in meters)
trueSize=32,32,16						; Number of (true) grid points per MPI node
stepSize=0.004; debye length * 0.2							; Cell size (in Debye lengths of specie 0)
nGhostLayers = 1						; Number of Ghost points [x_min, y_min,...,x_max,...]
thresholds=0.1							; Thresholds for particle migration
boundaries = PERIODIC					; Boundary conditions at edges


; Domain size computed as (nSubdomains*trueSize-1)*stepSize

[fields]
BExt=0,0,0								; Externally imposed B-field
EExt=0,0,0								; Externally imposed E-field

[population]
; Use comma-separated lists to specify several species.
; The first specie is used for normalizing
nSpecies = 2
nParticles = 64 pc
nAlloc = 96 pc							; Number of particles to allocate memory for
charge = -1.602e-19,1.602e-19
mass = 9.109e-31,1.673e-27
density = 1e10,1e10
multiplicity =auto
thermalVelocity = 10175,288;10175,288;0.125,0.002789		; 1000K
;thermalVelocity = 0.02,0.00046
maxVel = 1
drift = 0
perturbAmplitude = 1e-5,0,0,0,0,0
perturbMode = 0,0,1,0,0,0

[methods]
; TBD: which solvers/algorithms to use?!
mode = regular
normalization = SI
poisson = mgSolver
acc = puAcc3D1KE
distr = puDistr3D1
migrate = puExtractEmigrants3D

[multigrid]
; Specific parameters of each algorithm? E.g. depth of MG, BCs
cycle           = mgVRecursive             	; Choice of mg cycle type
preSmooth       = gaussSeidelRB				; Choice of presmoother method (Only 1 possible option yet)
postSmooth      = gaussSeidelRB	    		; Choice of postsmoother method
coarseSolver    = gaussSeidelRB 			; Choice of coarse grid solver
mgLevels        = 1							; Number of Multigrid levels
mgCycles        = 15						; Number of cycles
nPreSmooth      = 10						; Number of iterations for the presmoother
nPostSmooth     = 10						; Number of iterations for the postsmoother
nCoarseSolve    = 10
prolongator     = bilinear					; Prolongation stencil
restrictor      = halfWeight				; Restrictor stencil
