;
; @file			input.ini
; @brief		PINC input file template.
; @author		Steffen Brask <steffen.brask@fys.uio.no>
;

[files]
objects = sphere.txt, sphere2.txt		; paths to objects
output = data/							; data file path (including filename prefix)

[msgfiles]
parsedump = parsedump.txt				; Info on how input was parsed

[time]
nTimeSteps = 10#30000 						; Number of time steps
timeStep = 6.73e-9#1.68e-9 #3.36e-9							; Time step (in 1/omega_p of specie 0)

; Use comma-separated lists to specify several dimensions.
[grid]
nDims=3
nSubdomains=2,2,2						; Number of subdomains
nEmigrantsAlloc= 2 pc, 4 pc, 8 pc		; Number of particles to allocate for (corner, edge, face)
trueSize=32,32,32						; Number of (true) grid points per MPI node
stepSize=0.0083#0.00207 #0.00414							; Cell size (in Debye lengths of specie 0)
nGhostLayers = 1						; Number of Ghost points [x_min, y_min,...,x_max,...]
thresholds=0.1							; Thresholds for particle migration
;boundaries = NEUMANN, NEUMANN, NEUMANN, NEUMANN, NEUMANN, NEUMANN
boundaries = DIRICHLET,DIRICHLET,DIRICHLET,DIRICHLET,DIRICHLET,DIRICHLET					; Boundary conditions at edges

; Domain size computed as (nSubdomains*trueSize-1)*stepSize

[fields]
BExt=0,0,0								; Externally imposed B-field
EExt=0,0,0								; Externally imposed E-field

[population]
; Use comma-separated lists to specify several species.
; The first specie is used for normalizing
nSpecies = 2
nParticles = 12 pc
nAlloc = 64 pc							; Number of particles to allocate memory for
charge = -1.602e-19,1.602e-19
mass = 9.109e-31,9.109e-29
density = 1e9,1e9
drift = 0,0,0,0,0,0
perturbAmplitude = 1e-5,0,0,0,0,0
perturbMode = 1,0,0,0,0,0
thermalVelocity = 123113,12311
maxVel = 1

[methods]
; Which solvers/algorithms to use?!
mode = oMode
normalization = SI
poisson = mgSolver
acc = puAcc3D1KE
distr = puDistr3D1split
migrate = puExtractEmigrants3DOpen

[multigrid]
; Specific parameters of each algorithm? E.g. depth of MG, BCs
cycle           = mgVRecursive     ; Choice of mg cycle type
preSmooth       = gaussSeidelRBND	   ; Choice of presmoother method (Only 1 possible option yet)
postSmooth      = gaussSeidelRBND	   ; Choice of postsmoother method
coarseSolver    = gaussSeidelRBND    ; Choice of coarse grid solver
mgLevels        = 5				   ; Number of Multigrid levels
mgCycles        = 5			   ; Number of cycles
nPreSmooth      = 10			   ; Number of iterations for the presmoother
nPostSmooth     = 10			   ; Number of iterations for the postsmoother
nCoarseSolve    = 10
prolongator     = bilinear		   ; Prolongation stencil
restrictor      = halfWeight	   ; Restrictor stencil
runNumber		= 0.0              ; Only for MG Run modes
