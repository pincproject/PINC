;
; @file			input.ini
; @author		Sigvald Marholm <sigvaldm@fys.uio.no>
; @copyright	University of Oslo, Norway
; @brief		PINC input file template.
; @date			11.10.15
;

[files]
objects = sphere.txt, sphere2.txt		; paths to objects
output = data/							; data file path (including filename prefix)

[msgfiles]
parsedump = parsedump.txt				; Info on how input was parse

[time]
nTimeSteps = 150						; Number of time steps
timeStep = 0.05						    ; Time step (in 1/omega_p of specie 0)
startTime = 0.0                         ; Start time, in case of continuing a simulation


[grid]
; Use comma-separated lists to specify several dimensions.
nDims=3
nSubdomains=1       					; Number of subdomains
nEmigrantsAlloc=4000,40000,400000		; Number of particles to allocate for (corner, edge, face)
debye=0.52								; Debye length of specie 0 (in meters)
trueSize=8	     					    ; Number of (true) grid points per MPI node
stepSize=0.0491			                ; Cell size (in Debye lengths of specie 0)
nGhostLayers=1				            ; Number of Ghost points [x_min, y_min,...,x_max,...]
thresholds=0.1, -0.1	                ; Thresholds for particle migration
boundaries = PERIODIC                  	; Boundary conditions at edges
;PERIODIC, DIRICHLET, NEUMANN, PERIODIC, DIRICHLET, NEUMANN

; Domain size computed as (nSubdomains*trueSize-1)*stepSize

[fields]
BExt=0								; Externally imposed B-field
EExt=0								; Externally imposed E-field

[population]
; Use comma-separated lists to specify several species.
; The first specie is used for normalizing
nSpecies = 2
nParticles = 64 pc
nAlloc = 96 pc							; Number of particles to allocate memory for
charge = -1,1
mass = 1,1836
multiplicity = auto

[methods]
; TBD: which solvers/algorithms to use?!
mode    = mgErrorScaling
poisson = multigrid
acc     = puAcc3D1KE
distr   = puDistr3D1

[multigrid]
; Specific parameters of each algorithm? E.g. depth of MG, BCs
cycle = mgVRecursive                    ; Choice of mg cycle type
preSmooth = gaussSeidelRB				; Choice of presmoother method (Only 1 possible option yet)
postSmooth = gaussSeidelRB	     		; Choice of postsmoother method
coarseSolver = gaussSeidelRB			; Choice of coarse grid solver
tol				= 1.E-10			;Tolerance
mgLevels = 3							; Number of Multigrid levels
mgCycles = 1							; Number of cycles
nPreSmooth = 10			                ; Number of iterations for the presmoother
nPostSmooth = 10						; Number of iterations for the postsmoother
nCoarseSolve = 15
prolongator = bilinear					; Prolongation stencil
restrictor = halfWeight 				; Restrictor stencil
