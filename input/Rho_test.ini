;
; @file			Horky_Miloch2014.ini
; @author		Steffen Brask <steffemb@fys.uio.no>, Sigvald Marholm <sigvaldm@fys.uio.no>
; @copyright	University of Oslo, Norway.
; @brief		PINC input file template. Setup to reproduce results from [Horky & Miloch, 2014, Kinetic plasma instabilities due to charge exchange and elastic collisions, Journal of Physics: Conference Series]
; @date			28.08.17, (DD.MM.YY)
;

;18936

[files]
output = data/							; data file path (including filename prefix)

[objects]
objects = sphere.h5, sphere2.txt		; paths to objects

[msgfiles]
parsedump = parsedump.txt				; Info on how input was parsed

[time]
nTimeSteps = 2					; Number of time steps
timeStep = 0.04							; Time step (in 1/omega_p of specie 0)
startTime = 0.0                         ; Start time, in case of continuing a simulation

; Use comma-separated lists to specify several dimensions.
[grid]
nDims=3
nSubdomains=1,1,1						; Number of subdomains
nEmigrantsAlloc=8 pc, 32 pc, 64 pc		; Number of particles to allocate for (corner, edge, face)
debye=0.06893							; Debye length of specie 0 (in meters)
trueSize=8,8,8						; Number of (true) grid points per MPI nodeS
stepSize=0.007							; Cell size (in Debye lengths of specie 0)
nGhostLayers = 1						; Number of Ghost points [x_min, y_min,...,x_max,...]
thresholds=0.1							; Thresholds for particle migration
boundaries = PERIODIC					; Boundary conditions at edges


; Domain size computed as (nSubdomains*trueSize-1)*stepSize

[fields]
BExt=1.9339,0,0								; Externally imposed B-field
EExt=0,0.007,0								; Externally imposed E-field

[population]
; Use comma-separated lists to specify several species.
; The first specie is used for normalizing
nSpecies = 2
nParticles = 64 pc
nAlloc = 96 pc							; Number of particles to allocate memory for
charge = -1,1
mass = 1,500
multiplicity = auto

thermalVelocity = 0.125,0.00279
;thermalVelocity = 0,0
maxVel = 1
drift = 0
perturbAmplitude = 0,0,0.1,0,0,0
perturbMode = 0,0,1,0,0,0

[methods]
; TBD: which solvers/algorithms to use?!
mode = mccTestMode3
poisson = mgSolve
acc = puBoris3D1KETEST
distr =  puDistr3D1split
migrate = puExtractEmigrants3D


[multigrid]
; Specific parameters of each algorithm? E.g. depth of MG, BCs
cycle           = mgVRecursive             	; Choice of mg cycle type
preSmooth       = gaussSeidelRB				; Choice of presmoother method (Only 1 possible option yet)
postSmooth      = gaussSeidelRB	    		; Choice of postsmoother method
coarseSolver    = gaussSeidelRB 			; Choice of coarse grid solver
mgLevels        = 5							; Number of Multigrid levels
mgCycles        = 15						; Number of cycles
nPreSmooth      = 10						; Number of iterations for the presmoother
nPostSmooth     = 10						; Number of iterations for the postsmoother
nCoarseSolve    = 10
prolongator     = bilinear					; Prolongation stencil
restrictor      = halfWeight				; Restrictor stencil

[collisions]
; specific parameters used in collisional module
collisionsOnOff		= 1		; ON = 1 / OFF = 0
collisionFrequency	= 70.0		; collisional freq. of electrons (given as v*omega_p)
numberDensityNeutrals = 1866		; [m^-3 DebyeLength^3], number per cell ,is constant for now
thermalVelocityNeutrals = 0.0000000000000000000000000000001	; one species.
; If using static cross sections e.g mccGetPmaxStatic...()
sigmaCEX		= 0.001205214498
sigmaIonElastic		= 0.001205214498
sigmaElectronElastic 	= 0.0006026







